# This template will create a pipeline for deploying a git repository
# to all environments included as stages in the pipeline.
#
# How to use:
# Include this template in your pipeline, and select the stages from this template you
# want to include (based on which environments are appropriate). For each of those
# environments, override the job and set the correct SERVER to deploy to for that
# environment and any other variables you need to change for that environment (for example
# if you have different SSH keys used). See the Git.gitlab-ci.example.yml file included
# in this repository for an example pipeline using this template.
#
# Required Variables:
#  * REPO_PATH: The path to the repository to update on the SERVER
#  * USER: The user to connect to the SERVER as
#  * ENCODED_PRIVATE_KEY: A base64 encoded private key used to connect to SERVER. Can be
#                         generated from an existing private key using something similar to:
#                         `base64 id_ed25519 -w0` then storing it in a CI/CD variable
#                         (preferably masked and protected), NEVER commit to your repository!
#  * SERVER: The server name you want to connect to (example: myserver.edu)

stages:
  - Deploy

1 Deploy Devel:
  stage: Deploy
  extends: .git_deploy_template

2 Deploy Stage:
  stage: Deploy
  extends: .git_deploy_template

3 Deploy Prod:
  stage: Deploy
  extends: .git_deploy_template

4 Deploy Prod Alt:
  stage: Deploy
  needs:
    - 3 Deploy Prod
  rules:
    - if: '$CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH'
  extends: .git_deploy_template
  
.git_deploy_template:
  image: alpine:latest
  variables:
    # Commented out to not override values defined at top level
    # But left for quick reference on required variables to be set
    #SERVER: ""
    #USER: ""
    #ENCODED_PRIVATE_KEY: ""
    #REPO_PATH: ""
    BRANCH: $CI_DEFAULT_BRANCH
  rules:
    - if: '$CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      when: manual
    - if: '$CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"'
  allow_failure: false
  extends: .setup_ssh
  script:
    - >
       if [ -z $SERVER ] || [ -z $USER ] || [ -z $ENCODED_PRIVATE_KEY ] || [ -z $REPO_PATH ] || [ -z $BRANCH ]; then 
          echo "Missing one or more of the required variables: SERVER, USER, ENCODED_PRIVATE_KEY, REPO_PATH, BRANCH" &&
          echo "SERVER: ${SERVER}" &&
          echo "USER: ${USER}" &&
          echo "ENCODED_PRIVATE_KEY: ${ENCODED_PRIVATE_KEY:0:3}..." &&
          echo "REPO_PATH: ${REPO_PATH}" &&
          echo "BRANCH: ${BRANCH}" &&
          exit 1;
       fi
    - > 
        ssh $USER@$SERVER 
        "mkdir -p $REPO_PATH && 
        ([ -d ${REPO_PATH}/.git ] || git clone git@\$(echo ${CI_PROJECT_URL} | sed -E 's/^\s*.*:\/\///g' | sed -E 's,\.edu\/,\.edu:,g' |sed -E 's,\.com\/,\.com:,g' ).git ${REPO_PATH}) &&
        git -C $REPO_PATH fetch origin $BRANCH &&
        git -C $REPO_PATH checkout $BRANCH &&
        git -C $REPO_PATH pull origin $BRANCH"

include:
  - project: 'msu-libraries/public/cicd-templates'
    ref: main
    file: 'SSH.gitlab-ci.yml'
